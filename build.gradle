buildscript {
    ext {
        kotlin_version = '1.2.40'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

group 'com.jiangklijna.md'
version '0.1'
sourceCompatibility = 1.8

jar {
    manifest {
        attributes 'Main-Class': 'com.jiangklijna.md.Application'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//	into('lib') {from configurations.runtime}
}

repositories {
//	mavenCentral()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "com.squareup.okhttp3:okhttp:3.10.0"
    compile 'org.greenrobot:eventbus:3.1.1'
    compile 'org.jsoup:jsoup:1.11.3'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.6'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task push {
    def out = { String line -> println(line) }
    def runtime = Runtime.runtime
    def exec = { String cmd ->
        def p = runtime.exec(cmd)
        def buf = new BufferedInputStream(p.errorStream)
        buf.readLines().forEach(out)
        buf.close()
        p.destroy()
    }
    doLast {
        exec("git add .")
        exec("git commit -m \"" + new Date() + "\"")
        exec("git push")
    }
}